name: python
on:
  pull_request:

jobs:
  path-filter:
    outputs:
      pytorch: ${{steps.changes.outputs.pytorch}}
      ray: ${{steps.changes.outputs.ray}}
      river: ${{steps.changes.outputs.river}}
      tensorflow: ${{steps.changes.outputs.tensorflow}}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: dorny/paths-filter@ebc4d7e9ebcb0b1eb21480bb8f43113e996ac77a # v3.0.1
        id: changes
        with:
          filters: |
            pytorch:
              - poetry.lock
              - pyproject.toml
              - 'pytorch/**'
              - '!pytorch/README.md'
              - '!pytorch/**/README.md'
              - .github/workflows/python.yml
            ray:
              - poetry.lock
              - pyproject.toml
              - 'ray/**'
              - '!ray/README.md'
              - '!ray/**/README.md'
              - .github/workflows/python.yml
            river:
              - poetry.lock
              - pyproject.toml
              - 'river/**'
              - '!river/README.md'
              - '!river/**/README.md'
              - .github/workflows/python.yml
            tensorflow:
              - poetry.lock
              - pyproject.toml
              - 'tensorflow/**'
              - '!tensorflow/README.md'
              - '!tensorflow/**/README.md'
              - .github/workflows/python.yml

  status-check:
    # This job is used for the branch's branch protection rule's status check.
    # If all dependent jobs succeed or are skipped this job succeeds.
    runs-on: ubuntu-latest
    needs:
      - pytorch
      - ray
      - river
      - tensorflow
    permissions: {}
    if: failure()
    steps:
      - run: exit 1

  pytorch:
    if: needs.path-filter.outputs.pytorch == 'true'
    needs: path-filter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python & Poetry
        uses: ./.github/actions/setup-poetry

      - name: run
        working-directory: pytorch
        run: |
          poetry run python distributed_example.py

  ray:
    if: needs.path-filter.outputs.ray == 'true'
    needs: path-filter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python & Poetry
        uses: ./.github/actions/setup-poetry

      - name: 02-task-pattern
        run: poetry run python ray/02-task-pattern/task_pattern_map_and_reduce.py

      - name: 05-train simple with torch
        run: poetry run python ray/05-train/simple_example.py -b torch

      - name: 05-train simple with tensorflow
        run: poetry run python ray/05-train/simple_example.py -b tensorflow

      # == Status ==
      # Current time: 2023-09-23 10:32:09 (running for 00:07:35.39)
      # Memory usage on this node: 1.6/6.8 GiB
      # Using FIFO scheduling algorithm.
      # Resources requested: 0/2 CPUs, 0/0 GPUs, 0.0/3.48 GiB heap, 0.0/1.74 GiB objects
      # Result logdir: /home/runner/ray_results/TensorflowTrainer_2023-09-23_10-24-33
      # Number of trials: 1/1 (1 PENDING)
      # +-------------------------------+----------+-------+
      # | Trial name                    | status   | loc   |
      # |-------------------------------+----------+-------|
      # | TensorflowTrainer_6383c_00000 | PENDING  |       |
      # +-------------------------------+----------+-------+

      # - name: 05-train tensorflow example
      #   run: python 05-train/tensorflow_example.py --smoke-test
      # TODO: https://github.com/nakamasato/ml-training/issues/298

  river:
    if: needs.path-filter.outputs.river == 'true'
    needs: path-filter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python & Poetry
        uses: ./.github/actions/setup-poetry

      - name: run river/quickstart/main.py
        run: poetry run python river/quickstart/main.py

      - name: run river/examples/fm-for-datalens/main.py
        run: poetry run python river/examples/fm-for-datalens/main.py --native-prediction --linear-regression --funk-mf --biased-mf --mimic-biased-mf --mf-with-improved-feature

  tensorflow:
    if: needs.path-filter.outputs.tensorflow == 'true'
    needs: path-filter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python & Poetry
        uses: ./.github/actions/setup-poetry

      - name: run
        run: poetry run python tensorflow/parameter-server-training/train_in_process_cluster.py
